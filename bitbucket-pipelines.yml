#  Template .NET Core build

#  This template allows you to validate your .NET Core package.
#  The workflow allows running tests and code linting on the default branch.

# To run your pipeline on a Windows machine, create a self-hosted Windows runner.
# For instructions on setting up a Windows runner, see https://support.atlassian.com/bitbucket-cloud/docs/set-up-runners-for-windows/

image: mcr.microsoft.com/dotnet/sdk:7.0

definitions:
  steps:
    - step: &build
        name: 'Dotnet Core Build'
        caches:
          - dotnetcore
        script:
          - apt-get update
          - apt-get install zip -y
          - dotnet build
          - dotnet publish -c Release -o ./bin/Publish
          - mv firebase-config.json ./bin/Publish
          - mv .env ./bin/Publish
          - cd ./bin/Publish
          - zip -r main.zip .
        artifacts:
          - 'bin/Publish/main.zip'
    - step: &buildNoZip
        name: 'Dotnet Core Build'
        caches:
          - dotnetcore
        script:
          - dotnet build
          - dotnet publish -c Release -o ./bin/Publish
        artifacts:
          - 'bin/Publish/main.zip'
    - step: &updateDB
        name: Update Database
        trigger: manual
        caches:
          - dotnetcore
        script:
          - dotnet tool install --global dotnet-ef
          - export PATH="$PATH:/root/.dotnet/tools"
          - dotnet-ef database update
    - step: &prod_env
        name: Add Firebase Credential & Environment File
        script:
          - echo "This step add environment files"
          - |
            cat << EOF > ./firebase-config.json
            $PROD_FIREBASE_CREDENTIAL
            EOF
          - |
            cat << EOF> ./.env
            REMOTE_DB="$PROD_REMOTE_DB"
            FIREBASE_API_KEY="$PROD_FIREBASE_API_KEY"
            FIREBASE_PROJECT_ID="$PROD_FIREBASE_PROJECT_ID"
            GOOGLE_APPLICATION_CREDENTIALS="$GOOGLE_APPLICATION_CREDENTIALS"
            FIREBASE_BUCKET="$PROD_FIREBASE_BUCKET"
            EOF

        artifacts:
          - 'firebase-config.json'
          - '.env'
    - step: &stg_env
        name: Add Firebase Credential & Environment File
        script:
          - echo "This step add environment files"
          - |
            cat << EOF > ./firebase-config.json
            $STG_FIREBASE_CREDENTIAL
            EOF
          - |
            cat << EOF> ./.env
            REMOTE_DB="$STG_REMOTE_DB"
            FIREBASE_API_KEY="$STG_FIREBASE_API_KEY"
            FIREBASE_PROJECT_ID="$STG_FIREBASE_PROJECT_ID"
            GOOGLE_APPLICATION_CREDENTIALS="$GOOGLE_APPLICATION_CREDENTIALS"
            FIREBASE_BUCKET="$STG_FIREBASE_BUCKET"
            EOF
        artifacts:
          - 'firebase-config.json'
          - '.env'
          
pipelines:
  pull-requests:
    '{feature/*,refactor/*,update/*,migration/*,fix/*,test/*}':
      - step: *stg_env
      - step: *buildNoZip
    '{hotfix/*}':
      - step: *prod_env
      - step: *buildNoZip
    
  branches:
    '{main}':
      - step: *prod_env
      - step: *build
      - step: *updateDB
      - step:
          name: Deploy Azure App Service Production
          deployment: production
          trigger: manual
          script:
            - pipe: atlassian/azure-web-apps-deploy:1.1.0
              variables:
                AZURE_APP_ID: $AZURE_APP_ID
                AZURE_PASSWORD: $AZURE_PASSWORD
                AZURE_TENANT_ID: $AZURE_TENANT_ID
                AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
                AZURE_APP_NAME: $AZURE_APP_NAME
                ZIP_FILE: 'bin/Publish/main.zip'
                DEBUG: 'true'
    '{develop}':
      - step: *stg_env
      - step: *build
      - step: *updateDB
      - step:
          name: Deploy Azure App Service Staging
          deployment: staging
          trigger: manual
          script:
            - pipe: atlassian/azure-web-apps-deploy:1.1.0
              variables:
                AZURE_APP_ID: $AZURE_APP_ID
                AZURE_PASSWORD: $AZURE_PASSWORD
                AZURE_TENANT_ID: $AZURE_TENANT_ID
                AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
                AZURE_APP_NAME: $AZURE_APP_NAME
                ZIP_FILE: 'bin/Publish/main.zip'
                DEBUG: 'true'
                