name: Build and deploy to staging

env:
  AZURE_WEBAPP_NAME: ${{ secrets.STG_WEBAPP_NAME }}
  AZURE_WEBAPP_PACKAGE_PATH: "."
  DOTNET_VERSION: "7"

on:
  push:
    branches: ["develop"]

permissions:
  contents: read

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Add Environment files
        run: |
          cat << EOF > ./firebase-config.json
          ${{ secrets.STG_FIREBASE_CREDENTIAL }}
          EOF

          cat << EOF > ./.env
          REMOTE_DB="${{ secrets.STG_REMOTE_DB }}"
          FIREBASE_API_KEY="${{ secrets.STG_FIREBASE_API_KEY }}"
          FIREBASE_PROJECT_ID="${{ secrets.STG_FIREBASE_PROJECT_ID }}"
          GOOGLE_APPLICATION_CREDENTIALS="${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
          FIREBASE_BUCKET="${{ secrets.STG_FIREBASE_BUCKET }}"
          APP_EMAIL="${{ secrets.STG_APP_EMAIL }}"
          APP_PASSWORD="${{ secrets.STG_APP_PASSWORD }}"
          EOF
      - name: Add Environment files
        run: |

          cat << EOF > ./.env
          REMOTE_DB="${{ secrets.STG_REMOTE_DB }}"
          FIREBASE_API_KEY="${{ secrets.STG_FIREBASE_API_KEY }}"
          FIREBASE_PROJECT_ID="${{ secrets.STG_FIREBASE_PROJECT_ID }}"
          GOOGLE_APPLICATION_CREDENTIALS="${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
          FIREBASE_BUCKET="${{ secrets.STG_FIREBASE_BUCKET }}"
          APP_EMAIL="${{ secrets.STG_APP_EMAIL }}"
          APP_PASSWORD="${{ secrets.STG_APP_PASSWORD }}"
          EOF
      - name: check
        run: |
          cat .env
          ls

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: env-files
          path: |
            ./.env
            ./firebase-config.json

  build:
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts from setup-env job
        uses: actions/download-artifact@v4
        with:
          name: env-files

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Publish and Set up Environment
        run: |
          dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
          mv .env ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app-${{ github.run_number }}
          path: ${{env.DOTNET_ROOT}}/myapp

  migrate:
    runs-on: ubuntu-latest
    needs: [setup-environment, build]

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts from setup-env job
        uses: actions/download-artifact@v3
        with:
          name: env-files

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app-${{ github.run_number }}

      - name: Update database
        run: |
          dotnet tool install --global dotnet-ef --version 7.0.3
          dotnet ef database update

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [setup-environment, build]

    environment:
      name: "Staging"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app-${{ github.run_number }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.STG_AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
